services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: tv-backend-postgres
    environment:
      POSTGRES_DB: tv_streaming_db
      POSTGRES_USER: tv_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strongpassword}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tv_user -d tv_streaming_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  # Redis for caching and Celery message broker
  redis:
    image: redis:7-alpine
    container_name: tv-backend-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # Elasticsearch for Global Search
  elasticsearch:
    image: elasticsearch:8.11.1
    container_name: tv-backend-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always

# Define Docker volumes for persistent data
volumes:
  pg_data:
    name: tv-backend-postgres-data
  redis_data:
    name: tv-backend-redis-data
  es_data:
    name: tv-backend-elasticsearch-data
